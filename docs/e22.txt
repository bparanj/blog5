-

List of Tasks displayed on the index page.

-

Task belongs to project. Task has many comments.

-

Tasks controller.

@task = Task.all 

-

tasks/index.html.erb
 
<td><%= task.name %> in <%= task.project.name %></td> 
-

seeds.rb

wealthy = Project.create(name: 'Wealth Building')
wealthy.tasks.create(name: 'Get rich quick', complete: false, priority: 4)
wealthy.tasks.create(name: 'Write a book', complete: true, priority: 5)

happy = Project.create(name: 'Be Happy')
happy.tasks.create(name: 'Buy a puppy', complete: false, priority: 9)
happy.tasks.create(name: 'Dance in the rain', complete: true, priority: 7)
happy.tasks.create(name: 'Dance in the snow', complete: true, priority: 6)
happy.tasks.create(name: 'Walk on water', complete: true, priority: 7)
happy.tasks.create(name: 'Just Blog It', complete: true, priority: 5)
happy.tasks.create(name: 'Play tennis', complete: true, priority: 4)
happy.tasks.create(name: 'Make fun of Donald Trump', complete: true, priority: 3)
happy.tasks.create(name: 'Walk on moon', complete: true, priority: 2)

rails db:drop db:migrate db:seed

rails c
> Task.count
   (0.1ms)  SELECT COUNT(*) FROM "tasks"
 => 10 
2.3.0 :002 > Project.count
   (0.1ms)  SELECT COUNT(*) FROM "projects"
 => 2 

-

Development log. N+1 query problem.

Started GET "/tasks" for ::1 at 2016-03-16 12:10:59 -0700
  ActiveRecord::SchemaMigration Load (0.1ms)  SELECT "schema_migrations".* FROM "schema_migrations"
Processing by TasksController#index as HTML
  Task Load (0.2ms)  SELECT "tasks".* FROM "tasks"
  Project Load (0.1ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 1], ["LIMIT", 1]]
  CACHE (0.0ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 1], ["LIMIT", 1]]
  Project Load (0.1ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]
  CACHE (0.0ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]
  CACHE (0.0ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]
  CACHE (0.0ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]
  CACHE (0.0ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]
  CACHE (0.0ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]
  CACHE (0.0ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]
  CACHE (0.0ms)  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]
  Rendered tasks/index.html.erb within layouts/application (34.0ms)
Completed 200 OK in 354ms (Views: 341.1ms | ActiveRecord: 1.4ms)


From the log file, we see three SQL queries:

SELECT "tasks".* FROM "tasks"
SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 1], ["LIMIT", 1]]
SELECT  "projects".* FROM "projects" WHERE "projects"."id" = ? LIMIT ?  [["id", 2], ["LIMIT", 1]]



-

Eager loading

@tasks = Task.all.includes(:project)

includes(:association_name)

-

One one SQL query in development log.


Started GET "/tasks" for ::1 at 2016-03-16 12:14:15 -0700
Processing by TasksController#index as HTML
  Task Load (0.3ms)  SELECT "tasks".* FROM "tasks"
  Project Load (0.1ms)  SELECT "projects".* FROM "projects" WHERE "projects"."id" IN (1, 2)
  Rendered tasks/index.html.erb within layouts/application (26.3ms)
Completed 200 OK in 68ms (Views: 62.0ms | ActiveRecord: 1.3ms)

We now only have two queries:

SELECT "tasks".* FROM "tasks"
SELECT "projects".* FROM "projects" WHERE "projects"."id" IN (1, 2)

You can also see the time 58 ms vs 354 ms in log file. The performance has improved almost 7 fold!

-


Task has many comments

include: [:project, :comments]
include: [:project, {comments: :user}]

Comment belongs_to :user







